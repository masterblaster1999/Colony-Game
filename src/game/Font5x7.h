#pragma once
#include <cstdint>

namespace font5x7 {

// Each glyph is 7 rows of 5 bits (left-aligned in 5 LSBs). Rows top->bottom.
// We store only ASCII you'd reasonably need in a HUD.

static const uint8_t GLYPH_UNKNOWN[7] = {
    0b11111,
    0b10001,
    0b10101,
    0b10001,
    0b10101,
    0b10001,
    0b11111,
};

static const uint8_t GLYPH_SPACE[7] = {0,0,0,0,0,0,0};

static const uint8_t DIGITS[10][7] = {
    {0b01110,0b10001,0b10011,0b10101,0b11001,0b10001,0b01110}, // 0
    {0b00100,0b01100,0b00100,0b00100,0b00100,0b00100,0b01110}, // 1
    {0b01110,0b10001,0b00001,0b00110,0b01000,0b10000,0b11111}, // 2
    {0b11110,0b00001,0b00001,0b01110,0b00001,0b00001,0b11110}, // 3
    {0b00010,0b00110,0b01010,0b10010,0b11111,0b00010,0b00010}, // 4
    {0b11111,0b10000,0b11110,0b00001,0b00001,0b10001,0b01110}, // 5
    {0b00110,0b01000,0b10000,0b11110,0b10001,0b10001,0b01110}, // 6
    {0b11111,0b00001,0b00010,0b00100,0b01000,0b01000,0b01000}, // 7
    {0b01110,0b10001,0b10001,0b01110,0b10001,0b10001,0b01110}, // 8
    {0b01110,0b10001,0b10001,0b01111,0b00001,0b00010,0b01100}, // 9
};

static const uint8_t LETTERS[26][7] = {
    {0b01110,0b10001,0b10001,0b11111,0b10001,0b10001,0b10001}, // A
    {0b11110,0b10001,0b10001,0b11110,0b10001,0b10001,0b11110}, // B
    {0b01110,0b10001,0b10000,0b10000,0b10000,0b10001,0b01110}, // C
    {0b11100,0b10010,0b10001,0b10001,0b10001,0b10010,0b11100}, // D
    {0b11111,0b10000,0b10000,0b11110,0b10000,0b10000,0b11111}, // E
    {0b11111,0b10000,0b10000,0b11110,0b10000,0b10000,0b10000}, // F
    {0b01110,0b10001,0b10000,0b10111,0b10001,0b10001,0b01110}, // G
    {0b10001,0b10001,0b10001,0b11111,0b10001,0b10001,0b10001}, // H
    {0b01110,0b00100,0b00100,0b00100,0b00100,0b00100,0b01110}, // I
    {0b00001,0b00001,0b00001,0b00001,0b10001,0b10001,0b01110}, // J
    {0b10001,0b10010,0b10100,0b11000,0b10100,0b10010,0b10001}, // K
    {0b10000,0b10000,0b10000,0b10000,0b10000,0b10000,0b11111}, // L
    {0b10001,0b11011,0b10101,0b10101,0b10001,0b10001,0b10001}, // M
    {0b10001,0b11001,0b10101,0b10011,0b10001,0b10001,0b10001}, // N
    {0b01110,0b10001,0b10001,0b10001,0b10001,0b10001,0b01110}, // O
    {0b11110,0b10001,0b10001,0b11110,0b10000,0b10000,0b10000}, // P
    {0b01110,0b10001,0b10001,0b10001,0b10101,0b10010,0b01101}, // Q
    {0b11110,0b10001,0b10001,0b11110,0b10100,0b10010,0b10001}, // R
    {0b01111,0b10000,0b10000,0b01110,0b00001,0b00001,0b11110}, // S
    {0b11111,0b00100,0b00100,0b00100,0b00100,0b00100,0b00100}, // T
    {0b10001,0b10001,0b10001,0b10001,0b10001,0b10001,0b01110}, // U
    {0b10001,0b10001,0b10001,0b01010,0b01010,0b00100,0b00100}, // V
    {0b10001,0b10001,0b10001,0b10101,0b10101,0b11011,0b10001}, // W
    {0b10001,0b01010,0b00100,0b00100,0b01010,0b10001,0b10001}, // X
    {0b10001,0b01010,0b00100,0b00100,0b00100,0b00100,0b00100}, // Y
    {0b11111,0b00001,0b00010,0b00100,0b01000,0b10000,0b11111}, // Z
};

static const uint8_t PUNCT[][7] = {
    {0b00000,0b00100,0b00100,0b00100,0b00000,0b00000,0b00100}, // !
    {0b01010,0b01010,0b00000,0b00000,0b00000,0b00000,0b00000}, // "
    {0b01010,0b11111,0b01010,0b01010,0b11111,0b01010,0b00000}, // #
    {0b00100,0b01111,0b10100,0b01110,0b00101,0b11110,0b00100}, // $
    {0b11001,0b11010,0b00100,0b00100,0b01011,0b10011,0b00000}, // %
    {0b01100,0b10010,0b10100,0b01000,0b10101,0b10010,0b01101}, // &
    {0b00100,0b00100,0b00000,0b00000,0b00000,0b00000,0b00000}, // '
    {0b00010,0b00100,0b01000,0b01000,0b01000,0b00100,0b00010}, // (
    {0b01000,0b00100,0b00010,0b00010,0b00010,0b00100,0b01000}, // )
    {0b00000,0b00100,0b11111,0b00100,0b01010,0b00000,0b00000}, // *
    {0b00000,0b00100,0b00100,0b11111,0b00100,0b00100,0b00000}, // +
    {0b00000,0b00000,0b00000,0b00000,0b00100,0b00100,0b01000}, // ,
    {0b00000,0b00000,0b00000,0b11111,0b00000,0b00000,0b00000}, // -
    {0b00000,0b00000,0b00000,0b00000,0b00000,0b00110,0b00110}, // .
    {0b00001,0b00010,0b00100,0b01000,0b10000,0b00000,0b00000}, // /
};

static const uint8_t SYMBOLS[][7] = {
    {0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000}, // (unused 0)
    {0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b00000}, // (unused 1)
    {0b11111,0b10001,0b10001,0b10001,0b10101,0b10001,0b11111}, // 0->like frame (unused)
};

inline const uint8_t* getGlyph(char c) {
    if (c==' ') return GLYPH_SPACE;
    if (c>='0' && c<='9') return DIGITS[c-'0'];
    if (c>='A' && c<='Z') return LETTERS[c-'A'];
    if (c>='a' && c<='z') return LETTERS[c-'a']; // uppercase fallback
    switch(c){
        case '!': return PUNCT[0];
        case '"': return PUNCT[1];
        case '#': return PUNCT[2];
        case '$': return PUNCT[3];
        case '%': return PUNCT[4];
        case '&': return PUNCT[5];
        case '\'':return PUNCT[6];
        case '(': return PUNCT[7];
        case ')': return PUNCT[8];
        case '*': return PUNCT[9];
        case '+': return PUNCT[10];
        case ',': return PUNCT[11];
        case '-': return PUNCT[12];
        case '.': return PUNCT[13];
        case '/': return PUNCT[14];
        case ':': { static const uint8_t colon[7]={0b00000,0b00000,0b00110,0b00000,0b00110,0b00000,0b00000}; return colon; }
        case ';': { static const uint8_t sc[7]={0b00000,0b00000,0b00110,0b00000,0b00100,0b00100,0b01000}; return sc; }
        case '<': { static const uint8_t gl[7]={0b00010,0b00100,0b01000,0b10000,0b01000,0b00100,0b00010}; return gl; }
        case '=': { static const uint8_t gl[7]={0b00000,0b11111,0b00000,0b11111,0b00000,0b00000,0b00000}; return gl; }
        case '>': { static const uint8_t gl[7]={0b01000,0b00100,0b00010,0b00001,0b00010,0b00100,0b01000}; return gl; }
        case '?': { static const uint8_t gl[7]={0b01110,0b10001,0b00010,0b00100,0b00100,0b00000,0b00100}; return gl; }
        case '_': { static const uint8_t gl[7]={0b00000,0b00000,0b00000,0b00000,0b00000,0b00000,0b11111}; return gl; }
        case '[': { static const uint8_t gl[7]={0b01110,0b01000,0b01000,0b01000,0b01000,0b01000,0b01110}; return gl; }
        case ']': { static const uint8_t gl[7]={0b01110,0b00010,0b00010,0b00010,0b00010,0b00010,0b01110}; return gl; }
        case ':': { static const uint8_t gl[7]={0b00000,0b00000,0b00100,0b00000,0b00100,0b00000,0b00000}; return gl; }
        default: return GLYPH_UNKNOWN;
    }
}

} // namespace font5x7
