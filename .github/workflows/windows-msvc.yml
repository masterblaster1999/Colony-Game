name: Windows MSVC

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: windows-2022

    env:
      # Ensure 64-bit triplet by default in manifest mode
      VCPKG_DEFAULT_TRIPLET: x64-windows

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup CMake
        # Use the supported tag; README documents @latest and version pinning
        uses: lukka/get-cmake@latest  # https://github.com/lukka/get-cmake
        with:
          cmakeVersion: latest

      - name: Setup MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          vsversion: 2022

      - name: Show Visual Studio & vcpkg locations (diagnostics)
        shell: pwsh
        run: |
          Write-Host "VCPKG_INSTALLATION_ROOT=$env:VCPKG_INSTALLATION_ROOT"
          Write-Host "VSWHERE:"
          & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -property installationPath

      - name: Cache vcpkg artifacts (manifest mode)
        uses: actions/cache@v4
        with:
          path: |
            build/vcpkg_installed
          key: v1-${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            v1-${{ runner.os }}-vcpkg-

      - name: Cache CMake build
        uses: actions/cache@v4
        with:
          path: |
            build/CMakeCache.txt
            build/CMakeFiles
          key: v1-${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt', 'cmake/**/*.cmake', 'src/**/*.cpp', 'src/**/*.h') }}
          restore-keys: |
            v1-${{ runner.os }}-cmake-

      - name: Configure (VS 2022, x64)
        shell: pwsh
        run: >
          cmake -S . -B build
          -G "Visual Studio 17 2022" -A x64
          -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake"
          -DBUILD_TESTING=ON
          -DCOLONY_LTO=OFF

      - name: Build (Release)
        shell: pwsh
        run: cmake --build build --config Release --parallel

      - name: Run tests (ctest)
        if: success()
        shell: pwsh
        run: ctest --test-dir build --config Release --output-on-failure

      - name: Package (cpack ZIP)
        if: success()
        shell: pwsh
        run: cmake --build build --config Release --target package
