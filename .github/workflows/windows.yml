name: Windows CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: windows-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Windows-safe filenames
        shell: pwsh
        run: |
          $invalid = @()
          git ls-tree -r --name-only HEAD | ForEach-Object {
            # Invalid characters or reserved device names on Windows
            if ($_ -match '[:<>\"|?*]' -or $_ -match '(^|[\\/])(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9])(\.|[\\/]|$)') {
              $invalid += $_
            }
          }
          if ($invalid.Count -gt 0) {
            Write-Host "❌ Invalid Windows paths found:" -ForegroundColor Red
            $invalid | ForEach-Object { Write-Host "  $_" }
            exit 1
          } else {
            Write-Host "✅ All file names are Windows-safe."
          }

      - name: Setup CMake 3.31.x
        uses: lukka/get-cmake@v3
        with:
          cmake-version: 3.31.0

      - name: Cache vcpkg artifacts (if repo uses vcpkg)
        if: ${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') != '' }}
        uses: actions/cache@v4
        with:
          path: |
            C:\vcpkg\installed
            C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}

      - name: Configure CMake (MSVC)
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64

      - name: Build (Release)
        run: cmake --build build --config Release --parallel

      - name: Stage (Release)
        # requires the 'stage_win' custom target to be defined in CMake
        run: cmake --build build --config Release --target stage_win --parallel

      - name: Compute artifact name
        id: names
        shell: pwsh
        run: |
          $short = "${env:GITHUB_SHA}".Substring(0,7)
          echo "short_sha=$short" >> $env:GITHUB_OUTPUT

      - name: Upload staged artifact
        uses: actions/upload-artifact@v4
        with:
          name: ColonyGame-win64-${{ steps.names.outputs.short_sha }}
          path: build/stage/bin/**
          if-no-files-found: error
          retention-days: 7
