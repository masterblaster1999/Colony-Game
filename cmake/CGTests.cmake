# cmake/CGTests.cmake
include_guard(GLOBAL)
include(CTest)
if(NOT BUILD_TESTING)
  return()
endif()

if(EXISTS "${CMAKE_SOURCE_DIR}/tests/CMakeLists.txt}")
  add_subdirectory(tests)
elseif(EXISTS "${CMAKE_SOURCE_DIR}/tests")
  file(GLOB TEST_SRCS CONFIGURE_DEPENDS "${CMAKE_SOURCE_DIR}/tests/*.cpp" "${CMAKE_SOURCE_DIR}/tests/*.cxx")
  set(_TEST_MAIN "")
  foreach(_cand IN LISTS TEST_SRCS)
    if(_cand MATCHES "test_main\\.(cpp|cxx)$")
      set(_TEST_MAIN "${_cand}")
    endif()
  endforeach()
  if(_TEST_MAIN)
    list(REMOVE_ITEM TEST_SRCS "${_TEST_MAIN}")
    add_executable(colony_tests ${_TEST_MAIN} ${TEST_SRCS})
  else()
    add_executable(colony_tests ${TEST_SRCS})
  endif()

  foreach(_lib colony_core colony_platform_win pcg Factions colony_build_options)
    if(TARGET ${_lib})
      target_link_libraries(colony_tests PRIVATE ${_lib})
    endif()
  endforeach()
  target_include_directories(colony_tests PRIVATE "${CMAKE_SOURCE_DIR}/src" "${CMAKE_SOURCE_DIR}/include")

  if(COLONY_USE_PCH)
    if(EXISTS "${CMAKE_SOURCE_DIR}/src/common/pch_core.hpp")
      target_precompile_headers(colony_tests PRIVATE src/common/pch_core.hpp)
    elseif(EXISTS "${CMAKE_SOURCE_DIR}/src/pch_core.hpp")
      target_precompile_headers(colony_tests PRIVATE src/pch_core.hpp)
    elseif(EXISTS "${CMAKE_SOURCE_DIR}/src/common/pch.hpp")
      target_precompile_headers(colony_tests PRIVATE src/common/pch.hpp)
    endif()
  endif()

  add_test(NAME colony_tests COMMAND colony_tests)
  set_property(TARGET colony_tests PROPERTY FOLDER "tests")
endif()
